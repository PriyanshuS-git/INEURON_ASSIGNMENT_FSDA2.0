use warehouse DATACLASS;

use database DEMODATABASE;

--1 LOAD GIVEN DATASET INTO THE SNOWFLAKE WITH A PRIMARY KEY TO ORDER_DATE.


CREATE OR REPLACE TABLE PS_SALES (
  ORDER_ID VARCHAR(70),
  ORDER_DATE DATE PRIMARY KEY,
  SHIP_DATE DATE,
  SHIP_MODE VARCHAR(70),
  CUSTOMER_NAME VARCHAR(70),
  SEGMENT VARCHAR(70),
  STATE VARCHAR(90),
  COUNTRY VARCHAR(80),
  MARKET VARCHAR(80),
  REGION VARCHAR(85),
  PRODUCT_ID VARCHAR(80),
  CATEGORY VARCHAR(70),
  SUB_CATEGORY VARCHAR(80),
  PRODUCT_NAME VARCHAR(300),
  SALES INT,
  QUANTITY INT,
  DISCOUNT FLOAT,
  PROFIT FLOAT,
  SHIPPING_COST FLOAT,
  ORDER_PRIORITY VARCHAR(120),
  YEAR CHAR(20)
);

DESCRIBE TABLE PS_SALES;
SELECT * FROM PS_SALES;

--CREATING A COPY OF PS_SALES.

CREATE OR REPLACE TABLE PS_SALES_COPY AS
SELECT * FROM PS_SALES;

DESCRIBE TABLE PS_SALES_COPY;
----------------------------------------------------------------------------------------------------------------------
--2 Change the Primary key to Order Id Column.

ALTER TABLE PS_SALES DROP PRIMARY KEY;

ALTER TABLE PS_SALES ADD PRIMARY KEY (ORDER_ID);
----------------------------------------------------------------------------------------------------------------------
--3 Check the data type for Order date and Ship date and mention in what data type it should be?

DESCRIBE TABLE PS_SALE;

--Order date and Ship date should be in DATE data type format.
--at the data cleaning time in excel spreadsheet we already change the format of order data and ship date from general to DATE DATA type.
--And the format is : 'YYYY-MM-DD'
----------------------------------------------------------------------------------------------------------------------
--4 Create a new column called order_extract and extract the number after the last ‘–‘from Order ID column.

SELECT *,SPLIT_PART(ORDER_ID,'-',3) AS ORDER_EXTRACT FROM PS_SALES;
----------------------------------------------------------------------------------------------------------------------
--5 Create a new column called Discount Flag and categorize it based on discount.Use ‘Yes’ if the discount is greater than zero else ‘No’.

SELECT *,
CASE 
WHEN (DISCOUNT> 0) THEN 'YES'
ELSE 'NO'
END AS DISCOUNT_FLAG
FROM PS_SALES;
----------------------------------------------------------------------------------------------------------------------
--6 Create a new column called process days and calculate how many days it takes for each order id to process from the order to its shipment.
CREATE OR REPLACE TABLE PS_SALES AS
SELECT *, DATEDIFF('DAY',ORDER_DATE,SHIP_DATE) AS PROCESS_DAY FROM PS_SALES;

SELECT * FROM PS_SALES;
----------------------------------------------------------------------------------------------------------------------
--7Create a new column called Rating and then based on the Process dates give rating like given below.
--a. If process days less than or equal to 3days then rating should be 5
--b. If process days are greater than 3 and less than or equal to 6 then rating should be 4
--c. If process days are greater than 6 and less than or equal to 10 then rating should be 3
--d. If process days are greater than 10 then the rating should be 2.


SELECT ORDER_ID,ORDER_DATE,SHIP_DATE, PROCESS_DAY,
CASE 
WHEN (PROCESS_DAY <= 3) THEN '5'
WHEN (PROCESS_DAY > 3 AND PROCESS_DAY <= 6) THEN '4'
WHEN (PROCESS_DAY > 6 AND PROCESS_DAY <= 10) THEN '3'
ELSE '2'
END AS RATINGS
FROM PS_SALES;
